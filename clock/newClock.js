const hour = document.querySelector("#hour");
const minute = document.querySelector("#minute");
const second = document.querySelector("#second");

//گرفتن زمان با ساتفاده از تابع
const date = new Date();
let h = date.getHours();
let m = date.getMinutes();
let s = date.getSeconds();

//انجام معادلات ریاضی برای به دست آوردن زمان بر روی ساعت
let hPosition = (h*360/12)+(m*(360/60)/12); //مقدار h از ساعت به دست می آید. برای اعمال بر روی دایره ساعت باید در 360 ضرب کنیم و سپس چون ساعت دارای 12 قسمت است تقسیم بر 12 کنیم
let mPosition = (m*360/60)+(s*(360/60)/60); //قسمت + برای این است که عقربه ها متناسب با ساعت حرکت کنند. در حالت فوق ابتدا دقیقه را بدست می آوریم و سپس ثانیه را به آن اضافه می کنیم و در نهایت چون هر ساعت 60 دقیقه است مقدار را در 60 تقسیم می کنیم
let sPosition = (s*360/60);

//اجرای کد به صورت پیوسته
function runClock() {
    //علت اضافه کردن این بخش: هر عقربه ثانیه شمار باید 6 درجه افزایش پیدا کند: 360/60 = 6
    //افزایش درجه عقربه دقیقه شمار به اندازه 0.1 درجه:\ 6/60 = 0.1
    //عقربه ساعت شمار در هر ساعت 30 درجگه حرکت می کند. اما هر دقیقه، عقربه ساعت‌شمار باید اندکی تغییر کند. هر دقیقه، عقربه ساعت‌شمار 0.5 درجه حرکت می‌کند، پس هر ثانیه باید 0.5 ÷ 60 = 0.0083 درجه تغییر کند.
    hPosition = hPosition+(3/360); //حرکت عقربه های ساعت به صورت پویا  //عقربه ساعت‌شمار در هر ساعت 30 درجه حرکت می‌کند، پس برای حرکت دقیق، هر ثانیه مقدار بسیار کمی تغییر می‌کند (حدود 0.0083 درجه).
    mPosition = mPosition+(6/60); //هر دقیقه، عقربه دقیقه‌شمار 6 درجه حرکت می‌کند. ولی چون کد در هر ثانیه اجرا می‌شود، باید هر ثانیه مقدار کمی تغییر کند، یعنی 0.1 درجه.
    sPosition = sPosition+6; //هر بار که کد اجرا می‌شود، عقربه ثانیه 6 درجه جلو می‌رود، زیرا در یک ساعت آنالوگ، هر ثانیه 6 درجه است.

    hour.style.transform = "rotate(" + hPosition + "deg)";//چون در فایل css چرخش مشخص شده می توانیم با تغییر مقدار rotate چرخش را ایجاد کنیم
    minute.style.transform = "rotate(" + mPosition + "deg)";
    second.style.transform = "rotate(" + sPosition + "deg)";
}

//ایجاد تاخیر 1 ثانیه ای
var interval = setInterval(runClock, 1000);